#!/bin/sh

if [ "$LEFTHOOK" = "0" ]; then
  exit 0
fi

{{- if .Rc}}
{{/* Load rc file, which may export ENV variables */}}
[ -f {{.Rc}} ] && . {{.Rc}}
{{- end}}

call_lefthook() {
  osArch=$(uname | tr '[:upper:]' '[:lower:]')
  cpuArch=$(uname -m | sed 's/aarch64/arm64/')

  if command -v lefthook{{.Extension}} >/dev/null 2>&1; then
    exec lefthook{{.Extension}} "$@"
  {{if .Extension -}}
  {{/* Check if lefthook.bat exists. Ruby bundler creates such a wrapper */ -}}
  elif command -v lefthook.bat >/dev/null 2>&1; then
    exec lefthook.bat "$@"
  {{end -}}
  fi

  try_exec "./node_modules/lefthook/bin/index.js" "$@"
  try_exec "./node_modules/@evilmartians/lefthook/bin/lefthook_${osArch}_${cpuArch}/lefthook{{.Extension}}" "$@"
  try_exec "./node_modules/@evilmartians/lefthook-installer/bin/lefthook_${osArch}_${cpuArch}/lefthook{{.Extension}}" "$@"

  if bundle exec lefthook -h >/dev/null 2>&1; then
    exec bundle exec lefthook "$@"
  elif yarn lefthook -h >/dev/null 2>&1; then
    exec yarn lefthook "$@"
  elif pnpm lefthook -h >/dev/null 2>&1; then
    exec pnpm lefthook "$@"
  elif command -v npx >/dev/null 2>&1; then
    exec npx @evilmartians/lefthook "$@"
  elif swift package plugin lefthook >/dev/null 2>&1; then
    exec swift package --disable-sandbox plugin lefthook "$@"
  else
    echo "Can't find lefthook in PATH"
    {{- if .AssertLefthookInstalled}}
    echo "ERROR: Operation is aborted due to lefthook settings."
    echo "Make sure lefthook is available in your environment and re-try."
    echo "To skip these checks use --no-verify git argument or set LEFTHOOK=0 env variable."
    exit 1
    {{- end}}
  fi
}

try_exec() {
  _path=$1; shift

  if [ -x "$_path" ]; then
    exec "$_path" "$@"
  fi
}

call_lefthook run "{{.HookName}}" "$@"
